name: Build, test and deploy Python application to Cloud Run

on:
  push:
    branches:
      - 'feature/**'
      - 'develop'
  # pull_request:
  #   branches: [master]

env:
  GAR_HOSTNAME: us-central1-docker.pkg.dev
  GAR_REPOSITORY: ${{ secrets.GCP_APP_NAME }}
  GCP_PROJECT: ${{ secrets.GCP_PROJECT_ID }}
  # nhi1

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with unittest
      run: |
        python -m unittest tests/test_1.py

  deploy:
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
    - name: Login
      uses: google-github-actions/setup-gcloud@v0
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_email: ${{ secrets.GCP_EMAIL }}
        service_account_key: ${{ secrets.GCP_CREDENTIALS }}

    - name: Configure Docker
      run: gcloud auth configure-docker "$GAR_HOSTNAME" --quiet

    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Build Docker image
      run: |
        IMAGE_NAME="$GAR_HOSTNAME/$GCP_PROJECT/$GAR_REPOSITORY/$GAR_REPOSITORY:$GITHUB_SHA"
        docker build . -t $IMAGE_NAME

    - name: Push Docker image
      run: |
        IMAGE_NAME="$GAR_HOSTNAME/$GCP_PROJECT/$GAR_REPOSITORY/$GAR_REPOSITORY:$GITHUB_SHA"
        docker push $IMAGE_NAME

    - name: Deploy Docker image
      run: |
        IMAGE_NAME="$GAR_HOSTNAME/$GCP_PROJECT/$GAR_REPOSITORY/$GAR_REPOSITORY:$GITHUB_SHA"
        gcloud run deploy ${{ secrets.GCP_APP_NAME }} --image $IMAGE_NAME --region us-central1 --platform managed --allow-unauthenticated
